#!/bin/sh
#
# Slackware build script for JACK (Jack-Audio-Connection-Kig)
# Copyright (C) 2008-2022 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=jack
VERSION=1.9.13
BUILD=${BUILD:-1}
ARCH=${ARCH:-i486}

CWD=${CWD:-`pwd`}
TMP=${TMP:-/tmp}

if [ ! -e $TMP ]; then
  mkdir --parents $TMP # location to build the source
fi

SRC=$TMP/${NAME}2-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Please, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir --parents $PKG

# Extract the sources
cd $TMP
tar --extract --verbose --file=$CWD/${NAME}2-${VERSION}.tar.gz || exit 3
cd $SRC
fix_source

# Configure
# Library readline requres ncurses, but it's not dynamically linked to it
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
LINKFLAGS=-lncurses \
./waf configure \
      --prefix=/usr \
      --mandir=/usr/man/man1 \
      --libdir=/usr/lib${LIBDIRSUFFIX} \
      --classic \
      --dbus \
      --firewire \
      --alsa || exit 5

# Build & install
./waf build --verbose --jobs 4 || exit 6
./waf install --verbose --destdir=$PKG || exit 7
# Provide symbolic link for convenience with previous versions of jack
( cd $PKG/usr/bin; ln --symbolic jack_rec jackrec )

bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
( cd $SRC; create_docs $PKG ${NAME}-${VERSION} )
install --mode 644 --preserve-timestamp \
        $CWD/JACKLIC $PKG/usr/doc/${NAME}-${VERSION}/COPYING
gzip_man $PKG

# Copy service info
install --mode 755 --directory $PKG/install
install --mode 644 --preserve-timestamp \
        $CWD/slack-desc     $PKG/install/slack-desc
install --mode 644 --preserve-timestamp \
        $CWD/slack-required $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install --mode 755 --directory $SBDIR
install --mode 644 --preserve-timestamp \
        $CWD/slack-desc         $SBDIR/slack-desc
install --mode 644 --preserve-timestamp \
        $CWD/slack-required     $SBDIR/slack-required
install --mode 644 --preserve-timestamp \
        $CWD/JACKLIC            $SBDIR/JACKLIC
install --mode 644 --preserve-timestamp \
        $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Package
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg --chown n --linkadd y $PKG_DIR/${PKGNAME}.txz
md5sum $PKG_DIR/${PKGNAME}.txz > $PKG_DIR/${PKGNAME}.txz.md5
install --mode 644 $PKG/install/slack-desc $PKG_DIR/${PKGNAME}.txt

# Clean up (optionally)
if [ "$1" = "--cleanup" ]; then
  rm --recursive $SRC
  rm --recursive $PKG
fi

